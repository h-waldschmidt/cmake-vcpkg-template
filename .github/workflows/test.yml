name: test_and_coverage
on:
  pull_request:
    branches: [main, master, develop]
    paths:
      [
        "**.c",
        "**.cpp",
        "**.h",
        "**.hpp",
        "**.cxx",
        "**.hxx",
        "**.cc",
        "**.hh",
        "**CMakeLists.txt",
        "meson.build",
        "**.cmake",
      ]
  push:
    branches: [main, master, develop]
    paths:
      [
        "**.c",
        "**.cpp",
        "**.h",
        "**.hpp",
        "**.cxx",
        "**.hxx",
        "**.cc",
        "**.hh",
        "**CMakeLists.txt",
        "meson.build",
        "**.cmake",
      ]

jobs:
  test_and_coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install ninja
        run: sudo apt-get install ninja-build gcovr -y
      - name: CMake Generate
        run: cmake --preset DebugTest
      - name: Build, Run Test and Generate Report
        run: cmake --build --preset DebugTest --target coverage
      - name: Archive coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: build/coverage/*.html
          retention-days: 7
      - name: Generate Coverage comment
        run: |
          LINES=$(awk '/<table class="coverage">/,/<\/table>/' build/coverage/index.html | awk '/<th scope="row">Lines:/,/<\/tr>/' | sed -n 's/.*>\(.*%\).*/\1/p' | sed 's/%//')
          FUNCTIONS=$(awk '/<table class="coverage">/,/<\/table>/' build/coerage/index.html | awk '/<th scope="row">Functions:/,/<\/tr>/' | sed -n 's/.*>\(.*%\).*/\1/p' | sed 's/%//')
          BRANCHES=$(awk '/<table class="coverage">/,/<\/table>/' build/coverage/index.html | awk '/<th scope="row">Branches:/,/<\/tr>/' | sed -n 's/.*>\(.*%\).*/\1/p' | sed 's/%//')
          echo "## Coverage Stats" >> output.md
          echo "- Lines: ${LINES}%" >> output.md
          echo "- Functions ${FUNCTIONS}%" >> output.md
          echo "- Branches ${BRANCHES}%" >> output.md
      - name: Comment on PR with test coverage
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '${cat output.md}'
            })
